import React, { useEffect, useState } from 'react';
import { useNavigate } from "react-router-dom";
// âœ¨ FIX: Replaced 'react-icons/fa' with 'lucide-react' which is already in use.
import { Calendar, Plus, PieChart, Pencil, Trash2 } from 'lucide-react';

// âœ¨ FIX: Defined API_BASE_URL directly to resolve the import error.
const API_BASE_URL = 'http://localhost:3000';

const FeedPage = () => {
Â  const [feeds, setFeeds] = useState([]);
Â  const [hoveredId, setHoveredId] = useState(null);
Â  const [userName, setUserName] = useState('');
Â  const [showDropdown, setShowDropdown] = useState(false);
Â  const navigate = useNavigate();

Â  useEffect(() => {
Â  Â  const fetchFeeds = async () => {
Â  Â  Â  const userId = localStorage.getItem('userId');
Â  Â  Â  const storedName = localStorage.getItem('username');

Â  Â  Â  setUserName(storedName || 'Guest');

Â  Â  Â  if (!userId) {
Â  Â  Â  Â  navigate('/login');
Â  Â  Â  Â  return;
Â  Â  Â  }

Â  Â  Â  try {
Â  Â  Â  Â  const response = await fetch(`${API_BASE_URL}/get-feed`, {
Â  Â  Â  Â  Â  method: 'POST',
Â  Â  Â  Â  Â  headers: { 'Content-Type': 'application/json' },
Â  Â  Â  Â  Â  body: JSON.stringify({ userId }),
Â  Â  Â  Â  });

Â  Â  Â  Â  const data = await response.json();
Â  Â  Â  Â  if (data.success && Array.isArray(data.feeds)) {
Â  Â  Â  Â  Â  setFeeds(data.feeds);
Â  Â  Â  Â  } else {
Â  Â  Â  Â  Â  setFeeds([]);
Â  Â  Â  Â  }
Â  Â  Â  } catch (error) {
Â  Â  Â  Â  console.error("Fetch error:", error);
Â  Â  Â  }
Â  Â  };

Â  Â  fetchFeeds();
Â  }, [navigate]);
  
  const handleDelete = async (idToDelete) => {
    if (!window.confirm("Are you sure you want to permanently delete this entry?")) {
        return;
    }

    try {
        const response = await fetch(`${API_BASE_URL}/delete-feed/${idToDelete}`, {
            method: 'DELETE',
        });
        const data = await response.json();
        if (data.success) {
            setFeeds(currentFeeds => currentFeeds.filter(feed => feed.id !== idToDelete));
        } else {
            console.error("Failed to delete feed:", data.message);
        }
    } catch (error) {
        console.error("Delete request error:", error);
    }
  };

Â  const handleLogout = () => {
Â  Â  localStorage.clear();
Â  Â  navigate('/login');
Â  };

Â  const toggleDropdown = () => {
Â  Â  setShowDropdown(!showDropdown);
Â  };

Â  const getCardBackgroundColor = (emoji) => {
Â  Â  switch (emoji) {
Â  Â  Â  case "ðŸ™‚": return "from-green-200 to-green-100";
Â  Â  Â  case "ðŸ˜”": return "from-gray-300 to-gray-400";
Â  Â  Â  case "ðŸ˜„": return "from-yellow-200 to-yellow-300";
Â  Â  Â  case "ðŸ˜¡": return "from-red-400 to-yellow-200";
Â  Â  Â  case "ðŸ˜­": return "from-cyan-200 to-blue-300";
Â  Â  Â  case "ðŸ˜±": return "from-pink-200 to-indigo-200";
Â  Â  Â  case "ðŸ˜•": return "from-blue-200 to-indigo-300";
Â  Â  Â  default: return "from-gray-100 to-gray-200";
Â  Â  }
Â  };

Â  return (
Â  Â  <div className="min-h-screen bg-gradient-to-br from-gray-50 to-gray-200 p-6">
Â  Â  Â  {/* Header Bar */}
Â  Â  Â  <div className="flex justify-between items-center mb-8 relative">
Â  Â  Â  Â  <div onClick={toggleDropdown} className="flex items-center gap-3 cursor-pointer relative">
Â  Â  Â  Â  Â  <div className="w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-lg font-bold text-white shadow-lg">
Â  Â  Â  Â  Â  Â  {userName.charAt(0).toUpperCase()}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <span className="font-semibold text-gray-800 text-lg">{userName}</span>
Â  Â  Â  Â  Â  {showDropdown && (
Â  Â  Â  Â  Â  Â  <div className="absolute top-14 left-0 bg-white shadow-lg rounded-xl p-2 w-32 z-20">
Â  Â  Â  Â  Â  Â  Â  <div onClick={handleLogout} className="px-4 py-2 text-gray-700 hover:bg-gray-100 rounded cursor-pointer">
Â  Â  Â  Â  Â  Â  Â  Â  Logout
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  </div>

Â  Â  Â  Â  <div className="flex gap-5 items-center">
          {/* âœ¨ FIX: Replaced Fa icons with lucide-react icons */}
Â  Â  Â  Â  Â  <PieChart 
Â  Â  Â  Â  Â  Â  size={22} 
Â  Â  Â  Â  Â  Â  className="text-gray-700 hover:text-indigo-600 cursor-pointer transition-transform transform hover:scale-110" 
Â  Â  Â  Â  Â  Â  onClick={() => alert("Analysis coming soon...")} 
Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  <Calendar 
Â  Â  Â  Â  Â  Â  size={22} 
Â  Â  Â  Â  Â  Â  className="text-gray-700 hover:text-indigo-600 cursor-pointer transition-transform transform hover:scale-110" 
Â  Â  Â  Â  Â  Â  onClick={() => navigate('/calendar')} 
Â  Â  Â  Â  Â  />
Â  Â  Â  Â  </div>
Â  Â  Â  </div>

Â  Â  Â  {/* Page Title */}
Â  Â  Â  <h1 className="text-3xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-indigo-500 to-purple-600 mb-6">
Â  Â  Â  Â  Your Feeds
Â  Â  Â  </h1>

Â  Â  Â  {/* Feed List */}
Â  Â  Â  {feeds.length > 0 ? (
Â  Â  Â  Â  <div className="flex flex-col gap-6">
Â  Â  Â  Â  Â  {feeds.map((feed) => (
Â  Â  Â  Â  Â  Â  <div
Â  Â  Â  Â  Â  Â  Â  key={feed.id}
Â  Â  Â  Â  Â  Â  Â  onMouseEnter={() => setHoveredId(feed.id)}
Â  Â  Â  Â  Â  Â  Â  onMouseLeave={() => setHoveredId(null)}
               onClick={() => navigate(`/viewcontext/${feed.id}`)}
Â  Â  Â  Â  Â  Â  Â  className={`relative p-6 rounded-2xl shadow-lg bg-gradient-to-r ${getCardBackgroundColor(feed.emoji)} transition-all transform hover:scale-105 hover:shadow-2xl cursor-pointer`}
Â  Â  Â  Â  Â  Â  >
                {hoveredId === feed.id && (
                    <div className="absolute top-4 right-4 flex items-center gap-3 bg-white/50 p-2 rounded-full">
                        <Pencil
                            size={18}
                            className="text-gray-700 hover:text-blue-600 transition-colors"
                            onClick={(e) => {
                                e.stopPropagation();
                                navigate(`/viewcontext/${feed.id}`);
                            }}
                        />
                        <Trash2
                            size={18}
                            className="text-gray-700 hover:text-red-600 transition-colors"
                            onClick={(e) => {
                                e.stopPropagation();
                                handleDelete(feed.id);
                            }}
                        />
                    </div>
                )}
Â  Â  Â  Â  Â  Â  Â  <h2 className="text-xl font-bold mb-2 text-gray-900">{feed.title}</h2>
Â  Â  Â  Â  Â  Â  Â  <p className="text-sm text-gray-600 mb-3">{new Date(feed.created_at).toLocaleDateString()}</p>
Â  Â  Â  Â  Â  Â  Â  <p className="text-gray-800 line-clamp-2">{feed.content}</p>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  </div>
Â  Â  Â  ) : (
Â  Â  Â  Â  <p className="text-gray-500 text-center mt-10 italic">No feeds available.</p>
Â  Â  Â  )}

Â  Â  Â  {/* Floating Add Button */}
Â  Â  Â  <button
Â  Â  Â  Â  onClick={() => navigate('/Addcontext')}
Â  Â  Â  Â  className="fixed bottom-6 left-1/2 transform -translate-x-1/2 bg-gradient-to-r from-indigo-500 to-blue-600 text-white rounded-full w-16 h-16 flex items-center justify-center shadow-lg hover:scale-110 transition-transform"
Â  Â  Â  >
        {/* âœ¨ FIX: Replaced Fa icon with lucide-react icon */}
Â  Â  Â  Â  <Plus size={22} />
Â  Â  Â  </button>
Â  Â  </div>
Â  );
};

export default FeedPage;

